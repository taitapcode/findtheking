const size = 8;
const boardGame = document.getElementById('board-game');
const grid = Array.from({ length: size }, () => Array(size).fill(0)); // Generate the grid size x size filled with 0

let isStarted = false;
const kingPosition = { row: -1, col: -1 };

// Determines if a cell should be light colored based on chessboard pattern
function isLightCell(row, col) {
  if (col % 2 == row % 2) return true;
  return false;
}

function randomSpawnKing(selectedRow, selectedCol) {
  do {
    kingPosition.row = Math.floor(Math.random() * size);
    kingPosition.col = Math.floor(Math.random() * size);
  }
}

function onCellClick(row, col) {
  if (!isStarted) {
    isStarted = true;
    return randomSpawnKing(row, col);
  }
}

// Render the chessboard
for (let col = 0; col < size; col++) {
  const colDiv = document.createElement('div');
  colDiv.classList.add(`col-${col + 1}`);

  for (let row = 0; row < size; row++) {
    const cellDiv = document.createElement('div');
    cellDiv.classList.add('cell');
    cellDiv.classList.add(isLightCell(row, col) ? 'light' : 'dark');
    cellDiv.onclick = () => console.log(`Clicked on cell (${row}, ${col})`);
    colDiv.appendChild(cellDiv);
  }

  boardGame.appendChild(colDiv);
}
